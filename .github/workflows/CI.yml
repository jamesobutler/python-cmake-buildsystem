name: CI

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  tests:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macos-latest]
        python-version: [3.7.17, 3.8.20, 3.9.23, 3.10.18, 3.11.13, 3.12.11]
        include:
          - runs-on: macos-latest
            c-compiler: "clang"
            cxx-compiler: "clang++"
            initial-dashboard-cache: "CMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.13"

    name: python-${{ matrix.python-version }}-${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0
        path: src

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@802fa1a2c4e212495c05bf94dba2704a92a472be # v2.0.2
      with:
        cmake-version: 3.20.6

    - name: Setup ninja
      uses: ashutoshvarma/setup-ninja@66ad2db9ed7d211c065daeeb849e9c8c895773c9 # master
      with:
        version: 1.10.0

    - name: Download dashboard script
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        repository: 'python-cmake-buildsystem/python-cmake-buildsystem'
        ref: dashboard
        fetch-depth: 0
        path: scripts

    - name: Writing initial dashboard cache
      shell: bash
      run: |
        cat > scripts/initial-dashboard-cache.txt << EOF
        ${{ matrix.initial-dashboard-cache }}
        EOF
        cat scripts/initial-dashboard-cache.txt

    - name: Build & Test
      run: ctest --timeout 360 -S scripts/github_actions_dashboard.cmake -VV
      env:
        PY_VERSION: ${{ matrix.python-version }}
        CC: ${{ matrix.c-compiler }}
        CXX: ${{ matrix.cxx-compiler }}

  pass: # This job does nothing and is only used for the branch protection
    if: always()
    needs:
    - tests

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@2765efec08f0fd63e83ad900f5fd75646be69ff6 # v1.2.2
      with:
        jobs: ${{ toJSON(needs) }}
